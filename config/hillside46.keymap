/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#define QWERTY_L   0
#define RUSSIAN_L  1
#define SYM_L      2
#define SYMR_L     3
#define NUMBER_L   4
#define NAV_L      5
#define ADJ_L      6
#define Undo   LC(Y)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)
#define Redo   LC(Z)
/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        symr_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    behaviors {
        gr_esc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GR_ESC";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp ESC>;
            mods = <(MOD_LGUI|MOD_LALT|MOD_RGUI|MOD_RALT)>;
        };
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BS_DEL";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        Bspc_Layer: Bspc_Layer {
            compatible = "zmk,behavior-hold-tap";
            label = "BSPC_LAYER";
            bindings = <&mo>, <&bspc_del>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };
    combos {
        compatible = "zmk,combos";
        Combo_DEL {
            bindings = <&kp DEL>;
            key-positions = <16 15>;
        };
        Combo {
            bindings = <&kp BSPC>;
            key-positions = <20 19>;
        };
        Combo_ENTER {
            bindings = <&kp RET>;
            key-positions = <21 22>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            /* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |  ESC  |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Z   |   U   |   I   |   O   |   P   |   Ü   |
 * |   ß   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   Ö   |   Ä   |
 * | CTRL  |   Y   |   X   |   C   |   V   |   B   | none  |-------------------|  none |   N   |   M   |   ,   |   .   |   -   | ENTER |
 *                                 |  GUI  | BSPC  |SK SHFT|  Nav  |---| Sym - | SPACE |  Num  |  none |
 *  
 */

            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E  &kp R     &kp T                                                         &kp Y         &kp U  &kp I      &kp O    &kp P            &kp LBKT
&kp MINUS         &kp A  &kp S  &kp D  &kp F     &kp G                                                         &kp H         &kp J  &kp K      &kp L    &kp SEMI         &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C  &kp V     &kp B  &none                                       &none      &kp N         &kp M  &kp COMMA  &kp DOT  &mt RCTRL SLASH  &trans
                                       &kp LGUI  &mo 2  &sk LSHIFT  &mo NAV_L    &kp RIGHT_CONTROL  &kp SPACE  &mo NUMBER_L  &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
        russian_layer {
            /* RUS
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |   Ё   |   Ы   |   У   |   E   |   И   |   Ш   |-----------------------------------|   Щ   |   К   |   С   |   Д   |   З   |   Ц   |
 * |   Ъ   |   .   |   Я   |   А   |   О   |   Ж   |-----------------------------------|   Г   |   Т   |   Н   |   В   |   М   |   Ч   |
 * | CTRL  |   Ю   |   Й   |   Ь   |   Э   |   Ф   | none  |-------------------|  none |   Х   |   П   |   Р   |   Л   |   Б   | ENTER |
 *                                 |  GUI  | BSPC  |SK SHFT|  Nav  |---|  Sym  | SPACE |  Num  |  none |
 */
            bindings = <
&kp GRAVE  &kp S      &kp E  &kp T  &kp B    &kp I                                       &kp O     &kp R  &kp C  &kp L  &kp P      &kp W
&kp RBKT   &kp SLASH  &kp Z  &kp F  &kp J    &kp SEMI                                    &kp U     &kp N  &kp Y  &kp D  &kp V      &kp X
&kp LCTRL  &kp DOT    &kp Q  &kp M  &kp SQT  &kp A     &trans                    &trans  &kp LBKT  &kp G  &kp H  &kp K  &kp COMMA  &kp ENTER
                                    &trans   &trans    &trans  &trans    &trans  &trans  &trans    &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        sym_layer {
            /* SYM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | INS   |   %   |   $   |   €   |   ₽   |   #   |-----------------------------------|   (   |   !   |   '   |   §   |   +   |   *   |
 * | RUS_L |   @   |   /   |   \   |   [   |   ]   |-----------------------------------|   )   |   ?   |   "   |   &   |   -   |   =   |
 * | Ctrl  |   |   |   <   |   >   |   {   |   }   |SkAltGr|-------------------| MENU  | Mute  | Vol-  | Vol+  | Play  |   _   |   ~   |
 *                                 |       |       |       |  ADJ_L |---|      |       |       |       |
 */
            bindings = <
&kp INS         &kp LS(N5)    &kp DOLLAR  &kp RA(E)      &none       &kp BSLH                                           &kp ASTRK   &kp EXCL      &kp LS(BSLH)  &kp HASH   &kp RBKT       &kp LS(RBKT)
&tog RUSSIAN_L  &kp RA(Q)     &kp LS(N7)  &kp RA(MINUS)  &kp RA(N8)  &kp RA(N9)                                         &kp LPAR    &kp UNDER     &kp AT        &kp CARET  &kp SLASH      &kp LS(N0)
&trans          &kp RA(NUBS)  &kp NUBS    &kp LS(NUBS)   &kp RA(N7)  &kp RA(N0)  &sk RALT                    &kp K_APP  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP   &kp LS(SLASH)  &kp RA(RBKT)
                                                         &trans      &trans      &trans    &trans    &trans  &trans     &trans      &trans
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };
        symr_layer {
            /* SYMBOLS RUSSIAN
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | INS   |   %   |   $   |   €   |   ₽   |   #   |-----------------------------------|   (   |   !   |   '   |   :   |   +   |   *   |   
 * | RUS_L |   @   |   /   |   \   |   [   |   ]   |-----------------------------------|   )   |   ?   |   "   |   ;   |   -   |   =   | 
 * | Ctrl  |   |   |   <   |   >   |   {   |   }   |SkAltGr|-------------------| MENU  | Mute  | Vol-  | Vol+  | Play  |   _   |       |
 *                                 |       |       |       |  ADJ_L |---|      |       |       |       |
 */
            bindings = <
&kp INS         &trans        &kp DOLLAR  &kp RA(E)      &kp RA(N8)  &kp BSLH                                           &kp LPAR    &trans        &kp PIPE      &kp LS(N7)  &kp LS(EQUAL)  &kp LS(N8)
&tog RUSSIAN_L  &trans        &kp PIPE    &kp RA(MINUS)  &kp RA(N8)  &kp RA(N9)                                         &kp RPAR    &kp LS(N7)    &trans        &kp LS(N4)  &kp MINUS      &kp EQUAL
&trans          &kp RA(NUBS)  &kp NUBS    &kp LS(NUBS)   &kp RA(N7)  &kp RA(N0)  &sk RALT                    &kp K_APP  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP    &kp LS(MINUS)  &kp LS(MINUS)
                                                         &trans      &trans      &trans    &trans    &trans  &trans     &trans      &trans
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };
        number_layer {
            /* NUMBER
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   F7  |   F8  |   F9  |   -   |   -   |-----------------------------------|  BSPC |   7   |   8   |   9   |   +   |   *   |
 * | TAB   |   F4  |   F5  |   F6  |   -   |   -   |-----------------------------------|  DEL  |   4   |   5   |   6   |   -   |   =   |
 * | CTRL  |   F1  |   F2  |   F3  |   -   |   -   |  ESC  |-------------------| CAPS W|   0   |   1   |   2   |   3   | ENTER | ENTER |
 *                                 |  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |       |       |
 */
            bindings = <
&kp GRAVE  &kp F7  &kp F8  &kp F9  &kp P     &kp Y                                                     &kp BSPC   &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_PLUS   &kp KP_MULTIPLY
&kp TAB    &kp F4  &kp F5  &kp F6  &kp U     &kp I                                                     &kp DEL    &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_MINUS  &kp KP_EQUAL
&kp LCTRL  &kp F1  &kp F2  &kp F3  &kp K     &kp X     &kp ESC                             &caps_word  &kp KP_N0  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp KP_ENTER
                                   &kp LGUI  &kp LALT  &sk LSHIFT  &mo NAV_L    &mo SYM_L  &kp SPACE   &kp LALT   &kp RGUI
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_layer {
            /* NAV   
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | Copy  |       | HOME  |  Up   |  END  |       |-----------------------------------|   6   |   7   |   8   |   9   |   0   |  Adj  |
 * | TAB   | CTRL  | Left  | Down  | Right | ReDo  |-----------------------------------| PG UP |  Left |  Up   |  Down | Right | PG DN |
 * | Ctrl  | SHIFT |  Cut  | Copy  | Paste | UnDo  |  ReDo |-------------------| ReDo  |  F6   |  F7   |  F8   |  F9   |  F10  | Ctrl  |
 *                                 |       |       |       |       |---| ADJ_L |       |       |       |
 */

            bindings = <
&kp Copy   &kp HOME    &kp HOME  &kp UP    &kp END    &kp N5                                          &kp N6  &kp N7  &kp N8  &kp N9   &kp N0   &mo 6
&kp TAB    &kp LCTRL   &kp LEFT  &kp DOWN  &kp RIGHT  &kp Redo                                        &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&kp LCTRL  &kp LSHIFT  &kp Cut   &kp Copy  &kp Paste  &kp Undo  &kp Redo                    &kp Redo  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
                                           &trans     &trans    &trans    &trans    &trans  &trans    &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };
        adj_layer {
            /* ADJUST
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |       | QWERTY|       |       |RUSSIAN|       |-----------------------------------|OUT_USB|  F11  |  F12  |Prt Scr|EP_OFF | EP_ON |
 * | RESET | BT 0  | BT 1  | BT 2  | BT 3  | BT 4  |-----------------------------------|       |       |       |       |       | RESET |
 * |       | LGUI  | LALT  | LCTRL | LSHIFT|       |BT CLR |-------------------|OUT_TOG|       |       |OUT_USB|OUT_BLE|       | BOOTL |
 *                                 |       |       |       |       |---|       |       |       |       |
 */
            bindings = <
&none       &to QWERTY_L  &none         &none         &to RUSSIAN_L  &none                                                     &out OUT_USB  &kp F11  &kp F12       &kp PRINTSCREEN  &ext_power EP_OFF  &ext_power EP_ON
&sys_reset  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4                                              &none         &none    &none         &none            &none              &sys_reset
&none       &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHIFT     &none         &bt BT_CLR                    &out OUT_TOG  &none         &none    &out OUT_USB  &out OUT_BLE     &none              &bootloader
                                                      &trans         &trans        &trans      &trans    &trans  &trans        &trans        &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};